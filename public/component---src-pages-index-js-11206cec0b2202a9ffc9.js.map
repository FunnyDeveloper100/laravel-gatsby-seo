{"version":3,"sources":["webpack:///./src/components/SectionItem.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/constants/app.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Meta.js","webpack:///./src/components/Footer.js"],"names":["SectionItem","props","_this","_Component","call","this","state","scale","render","project","image_scale","imageScale","data","data_portrait","slug","medias","length","backgroundLandscape","backgroundImage","file","url","transform","backgroundPortrait","model","react_default","a","createElement","className","style","swiperClass","media","autoPlay","loop","playsInline","muted","src","type","react_vimeo_es","video","embedVimeo","autoplay","showTitle","showByline","showPortrait","gatsby_browser_entry","to","Component","HomePage","componentDidMount","themeOptions","allContentfulGeneralOptions","edges","node","hideHomepageGeneral","window","location","pathname","isMobile","$","nanoScroller","setTimeout","css","opacity","document","body","backgroundColor","backgroundColorGeneral","app_config","componentDidUpdate","buildSwiper","swiper","Swiper","direction","initialSlide","speed","slidesPerView","mousewheel","invert","forceToAxis","keyboard","enabled","onlyInViewport","nextSwiper","slideNext","sections","allContentfulSection","map","section","index","components_SectionItem","key","data_config","head_text","headerOptionGeneral","loading_bar_color","loadingBarColorGeneral","meta_title","metaTitleGeneral","meta_description","metaDescriptionGeneral","meta_keywords","metaKeywordsGeneral","meta_robots","metaRobotsGeneral","primary_color","primaryColorGeneral","second_color","secondColorGeneral","background_color","footer_color","footerTextColorGeneral","footer_text","footerOptionGeneral","meta_data","title","description","keywords","robots","style_primary_color","color","hideheader","hideHeaderGeneral","hidefooter","hideFooterGeneral","Meta","href","target","Footer","color_hover","url_color","query","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SITE_NAME","SITE_URL","PRIMARY_COLOR","SECONDARY_COLOR","BACKGROUND_COLOR","LOADING_BAR_COLOR","META_TITLE","META_ROBOTS","META_DESCRIPTION","META_KEYWORD","FOOTER_TEXT","FOOTER_COLOR","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","propTypes","shape","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","content","rel","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_render_html__WEBPACK_IMPORTED_MODULE_2__","react_render_html__WEBPACK_IMPORTED_MODULE_2___default","japan","style_color","renderHTML"],"mappings":"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","file":"component---src-pages-index-js-11206cec0b2202a9ffc9.js","sourcesContent":["import React, {Component} from 'react';\nimport Vimeo from '@u-wave/react-vimeo';\nimport { Link } from 'gatsby'\n\nclass SectionItem extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            scale: 1\n        };\n\n    }\n\n    render() {\n\n        const project = this.props.project;\n\n        let image_scale = project.imageScale ? project.imageScale : 1;\n\n        let data = '';\n\n        let data_portrait = '';\n\n        if (project.slug != \"home-video\") {\n\n            if (project.medias.length > 0) {\n\n                const backgroundLandscape = {\n                    backgroundImage: `url(${project.medias[0].file.url})`,\n                    transform: 'scale(' + image_scale + ')'\n                };\n\n                const backgroundPortrait = {\n                    backgroundImage: `url(${project.medias[1].file.url})`,\n                    transform: 'scale(' + image_scale + ')'\n                };\n\n                switch (project.model) {\n                    case 'Screen':\n                        data = <div className=\"image image--fullpage landscape\"\n                                    style={backgroundLandscape}></div>;\n                        data_portrait = <div className=\"image image--fullpage portrait\"\n                                    style={backgroundPortrait}></div>;\n                        break;\n                    case 'Width':\n                        data = <div className=\"image image--width landscape\"\n                                    style={backgroundLandscape}></div>;\n                        data_portrait = <div className=\"image image--width portrait\"\n                                    style={backgroundPortrait}></div>;\n                        break;\n                    case 'Height':\n                        data = <div className=\"image image--height landscape\"\n                                    style={backgroundLandscape}></div>;\n                        data_portrait = <div className=\"image image--height portrait\"\n                                    style={backgroundPortrait}></div>;\n                        break;\n                }\n\n            }\n\n\n        } else {\n\n            const swiperClass = `swiper--video swiper--video-${project.model}`;\n\n            if (!project.medias) {\n\n                data = <div className={swiperClass}>\n\n                    <div className=\"video video--iframe vimeo\">\n\n                        <Vimeo\n                            className=\"video__wrap\"\n                            video={project.embedVimeo}\n                            muted={false}\n                            autoplay={true}\n                            loop={true}\n                            showTitle={false}\n                            showByline={false}\n                            showPortrait={false}\n\n                        />\n\n                    </div>\n\n                </div>;\n\n            } else {\n\n                let media = project.medias[0].file;\n\n                data = <div className={swiperClass}>\n\n                    <div className=\"video video--iframe\">\n\n                       <video className=\"video-mp4\" autoPlay={true} loop ={true} playsInline muted>\n                            <source src={media.url} type=\"video/mp4\"/>\n                            Your browser does not support the video tag.\n                        </video>\n\n                    </div>\n\n                </div>;\n\n            }\n        }\n\n        return <div className=\"swiper-slide\">\n            <Link to='/projects/'>{data}{data_portrait}</Link>\n        </div>\n    }\n}\n\nexport default SectionItem;\n","import React, { Component } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Swiper from \"swiper\";\nimport \"swiper/dist/css/swiper.min.css\";\nimport Meta from \"../components/Meta\";\nimport Footer from \"../components/Footer\";\nimport * as app_config from \"../constants/app\";\nimport SectionItem from \"../components/SectionItem\";\nimport { isMobile } from \"react-device-detect\";\nimport $ from \"jquery\";\nimport \"../sass/app.scss\";\n\nclass HomePage extends Component {\n\n    componentDidMount() {\n\n        const themeOptions = this.props.data.allContentfulGeneralOptions.edges[0]\n            .node;\n\n        if (themeOptions.hideHomepageGeneral) {\n            return window.location.pathname = \"/projects\"\n        }\n\n        if (!isMobile) {\n            if ($(\".nano\").length > 0) {\n                $(\".nano\").nanoScroller();\n            }\n        }\n\n        setTimeout(function () {\n            $(\".footer\").css({ opacity: \"1\" });\n        }, 300);\n\n        document.body.style.backgroundColor = themeOptions.backgroundColorGeneral\n            ? themeOptions.backgroundColorGeneral\n            : app_config.BACKGROUND_COLOR\n    }\n\n    componentDidUpdate() {\n        this.buildSwiper();\n    }\n\n    buildSwiper() {\n        this.swiper = new Swiper(\".swiper-container-\", {\n            direction: \"vertical\",\n            initialSlide: 0,\n            speed: 1400,\n            slidesPerView: 1,\n            loop: false,\n            mousewheel: {\n                invert: true,\n                forceToAxis: true\n            },\n            keyboard: {\n                enabled: true,\n                onlyInViewport: false\n            }\n        });\n        window.swiper = this.swiper;\n    }\n\n    nextSwiper() {\n        if (typeof window.swiper !== \"undefined\") {\n            window.swiper.slideNext();\n        }\n    }\n\n    render() {\n        const themeOptions = this.props.data.allContentfulGeneralOptions.edges[0]\n            .node;\n\n        const sections = this.props.data.allContentfulSection.edges.map(\n            (section, index) => (\n                <SectionItem\n                    key={index}\n                    index={index}\n                    project={section.node}\n                    nextSwiper={this.nextSwiper}\n                />\n            )\n        );\n\n        let data_config = {\n            head_text: themeOptions.headerOptionGeneral.headerOptionGeneral\n                ? themeOptions.headerOptionGeneral.headerOptionGeneral\n                : app_config.SITE_NAME,\n            loading_bar_color: themeOptions.loadingBarColorGeneral\n                ? themeOptions.loadingBarColorGeneral\n                : app_config.LOADING_BAR_COLOR,\n            meta_title: themeOptions.metaTitleGeneral\n                ? themeOptions.metaTitleGeneral\n                : app_config.META_TITLE,\n            meta_description: themeOptions.metaDescriptionGeneral\n                .metaDescriptionGeneral\n                ? themeOptions.metaDescriptionGeneral.metaDescriptionGeneral\n                : app_config.META_DESCRIPTION,\n            meta_keywords: themeOptions.metaKeywordsGeneral.metaKeywordsGeneral\n                ? themeOptions.metaKeywordsGeneral.metaKeywordsGeneral\n                : app_config.META_KEYWORD,\n            meta_robots: themeOptions.metaRobotsGeneral\n                ? themeOptions.metaRobotsGeneral\n                : app_config.META_ROBOTS,\n            primary_color: themeOptions.primaryColorGeneral\n                ? themeOptions.primaryColorGeneral\n                : app_config.PRIMARY_COLOR,\n            second_color: themeOptions.secondColorGeneral\n                ? themeOptions.secondColorGeneral\n                : app_config.SECONDARY_COLOR,\n            background_color: themeOptions.backgroundColorGeneral\n                ? themeOptions.backgroundColorGeneral\n                : app_config.BACKGROUND_COLOR,\n            footer_color: themeOptions.footerTextColorGeneral\n                ? themeOptions.footerTextColorGeneral\n                : app_config.FOOTER_COLOR,\n            footer_text: themeOptions.footerOptionGeneral.footerOptionGeneral\n                ? themeOptions.footerOptionGeneral.footerOptionGeneral\n                : app_config.FOOTER_TEXT\n        };\n\n        let meta_data = {\n            title: data_config.meta_title,\n            description: data_config.meta_description,\n            keywords: data_config.meta_keywords,\n            robots: data_config.meta_robots,\n        };\n\n        const style_primary_color = {\n            color: data_config.primary_color\n        };\n\n        let hideheader = themeOptions.hideHeaderGeneral ? \"hideheader\" : \"\";\n        let hidefooter = themeOptions.hideFooterGeneral ? \"hidefooter\" : \"\";\n\n        return (\n            <div className=\"home-screen\">\n                <Meta {...meta_data} />\n                <div className={`section-content-menu ${hideheader}`}>\n                    <ul className=\"menu-first\">\n                        <li className=\"active\">\n                            <h1>\n                                <a href=\"https://www.completedentures.com.au\" target=\"_blank\" style={style_primary_color}>\n                                    {data_config.head_text}\n                                </a>\n                            </h1>\n                        </li>\n                    </ul>\n                </div>\n\n                <div className=\"home-screen--slide\">\n                    <div className=\"swiper-container swiper-container-outer swiper-container-vertical\">\n                        <div className=\"swiper-wrapper\">{sections}</div>\n                    </div>\n                </div>\n\n                <div className={`section-content--footer ${hidefooter}`}>\n                    <Footer data_config={data_config} color={data_config.footer_color} />\n                </div>\n\n                <style>\n                    {`\n          .section-content--menu > ul > li > a:hover {color: ${\n                        data_config.color_hover\n                        } !important}\n          .footer a:hover {color: ${data_config.color_hover} !important}\n          .footer a {color: ${data_config.url_color}}\n          .project-layout--right {color: ${data_config.primary_color}}\n          .project-list a:hover ~ .desc a{color: ${\n                        style_primary_color.color\n                        } !important}\n          .project-list .desc a:hover{color: ${\n                        data_config.primary_color\n                        } !important}\n          `}\n                </style>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n\nexport const query = graphql`\n  query {\n    allContentfulSection {\n      edges {\n        node {\n          id\n          title\n          slug\n          model\n          imageScale\n          embedVimeo\n          medias {\n            title\n            description\n            file {\n              url\n            }\n            fluid {\n              sizes\n              aspectRatio\n            }\n          }\n        }\n      }\n    }\n\n    allContentfulGeneralOptions {\n      edges {\n        node {\n          metaTitleGeneral\n          metaDescriptionGeneral {\n            metaDescriptionGeneral\n          }\n          metaRobotsGeneral\n          metaKeywordsGeneral {\n            metaKeywordsGeneral\n          }\n          metaTitleOfListingProject\n          backgroundColorGeneral\n          primaryColorGeneral\n          secondColorGeneral\n          loadingBarColorGeneral\n          headerOptionGeneral {\n            headerOptionGeneral\n          }\n          footerOptionGeneral {\n            footerOptionGeneral\n          }\n          footerTextColorOfHome\n          footerTextColorGeneral\n          hideHomepageGeneral\n          hideHeaderGeneral\n          hideFooterGeneral\n          metaTitleOfListingProject\n          metaDescriptionOfListingProject {\n            metaDescriptionOfListingProject\n          }\n          backgroundColorOfListingProject\n          headerTextColorOfHome\n          colorHoverForUrlOnHomePage\n          urlColorOfFooter\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const SITE_NAME = 'lost art';\nexport const SITE_URL = 'https://www.lost-art.com';\n\nexport const PRIMARY_COLOR = '#000';\nexport const SECONDARY_COLOR = '#9e9e9e';\nexport const BACKGROUND_COLOR = '#f5f8fa';\nexport const LOADING_BAR_COLOR = '#9e9e9e';\n\nexport const META_TITLE = 'Lost art - Projects';\nexport const META_ROBOTS = 'INDEX,FOLLOW';\nexport const META_DESCRIPTION = 'Lost art - Projects';\nexport const META_KEYWORD = 'Lost art';\nexport const FOOTER_TEXT = \"Ⓒ footer is updatedable in cms <a href = \\'http://lost-art.com/\\'>link</a> ip sum\";\nexport const FOOTER_COLOR = '#212529';","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport * as app_config from '../constants/app';\n\nclass Meta extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Helmet>\n        <title>{this.props.title || \"\"}</title>\n        <meta name=\"robots\" content={this.props.robots || \"\"} />\n        <meta name=\"googlebot\" content={this.props.robots || \"\"} />\n        <meta name=\"msnbot\" content={this.props.robots || \"\"} />\n        <meta name=\"description\" content={this.props.description || \"\"} />\n        <meta name=\"keywords\" content={this.props.keywords || \"\"} />\n        <meta name=\"author\" content=\"Lost art\" />\n        <meta name=\"revisit-after\" content=\"1 days\" />\n        <link rel=\"canonical\" href={app_config.SITE_URL + (this.props.location || '')} />\n      </Helmet>\n    );\n  }\n}\n\nexport default Meta;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport renderHTML from 'react-render-html';\n\nlet Footer = ({ data_config, japan, color }) => {\n\n    const style_color = {\n        color: color ? color : data_config.footer_color\n    }\n\n    if (japan) {\n        return <div className=\"footer\" style={style_color}>\n            <div>\n                <span>\n                    {data_config.footer_text ? renderHTML(data_config.footer_text) : ''}\n                </span>\n            </div>\n        </div>\n    }\n\n    return (\n        <div className=\"footer\" style={style_color}>\n            <div>\n                <span className=\"only_mobile_inline m-r-10\">\n                    <Link to='/page/bio-in-japanese/'>日本語</Link>\n                </span>\n\n                <span>\n                    {data_config.footer_text ? renderHTML(data_config.footer_text) : ''}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n"],"sourceRoot":""}