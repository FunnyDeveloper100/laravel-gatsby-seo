{"version":3,"sources":["webpack:///./node_modules/@u-wave/react-vimeo/dist/react-vimeo.es.js","webpack:///./node_modules/@vimeo/player/dist/player.es.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_vimeo_player__WEBPACK_IMPORTED_MODULE_2__","_assertThisInitialized","self","ReferenceError","eventNames","play","pause","ended","timeupdate","progress","seeked","texttrackchange","cuechange","cuepoint","volumechange","error","loaded","Vimeo","_React$Component","subClass","superClass","props","_this","call","this","refContainer","bind","prototype","Object","create","constructor","__proto__","_proto","componentDidMount","createPlayer","componentDidUpdate","prevProps","_this2","changes","keys","filter","name","updateProps","componentWillUnmount","player","destroy","getInitialOptions","id","video","width","height","autopause","autoplay","byline","showByline","color","loop","portrait","showPortrait","title","showTitle","muted","background","propNames","_this3","forEach","value","setAutopause","setColor","setLoop","setVolume","getPaused","then","paused","element","start","loadVideo","setCurrentTime","unload","_this4","_this$props","volume","container","dmName","reactName","on","event","handler","onReady","ready","render","_this$props2","className","a","createElement","ref","Component","defaultProps","__webpack_exports__","global","setImmediate","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","isNode","toString","getMethodName","prop","type","indexOf","toLowerCase","concat","substr","toUpperCase","isVimeoUrl","url","test","getVimeoUrl","oEmbedParameters","arguments","undefined","idOrUrl","Error","isNaN","parseFloat","isFinite","Math","floor","replace","TypeError","arrayIndexOfSupport","Array","postMessageSupport","window","postMessage","commonjsGlobal","WeakMap","hasOwnProperty","object","rand","checkInstance","x","methodName","isObject","random","substring","entry","_id","module","npo_src","context","definition","builtInProp","cycle","scheduling_queue","ToString","timer","fn","setTimeout","obj","val","config","err","schedule","add","drain","isThenable","o","_then","o_type","notify","chain","notifyIsolated","state","success","failure","cb","ret","reject","msg","promise","resolve","triggered","def","iteratePromises","Constructor","arr","resolver","rejecter","idx","MakeDefWrapper","MakeDef","Promise","executor","__NPO__","push","def_wrapper","apply","first","last","item","Item","next","f","PromisePrototype","len","msgs","count","exports","callbackMap","storeCallback","callback","playerCallbacks","get","set","getCallbacks","removeCallback","index","splice","getOEmbedParameters","defaults","reduce","params","param","getAttribute","createEmbed","_ref","html","querySelector","div","document","innerHTML","appendChild","firstChild","setAttribute","getOEmbedData","videoUrl","encodeURIComponent","xhr","XDomainRequest","XMLHttpRequest","open","onload","status","json","JSON","parse","responseText","domain_status_code","onerror","send","parseMessageData","data","console","warn","method","contentWindow","message","ieVersion","navigator","userAgent","stringify","origin","processData","callbacks","shift","shiftCallbacks","e","playerMap","readyMap","Player","options","instance","_classCallCheck","jQuery","getElementById","Boolean","nodeType","ownerDocument","defaultView","isDomElement","win","nodeName","iframe","has","readyPromise","onMessage","source","isReadyEvent","isPingResponse","addEventListener","attachEvent","oldElement","newElement","_originalElement","delete","catch","protoProps","staticProps","args","eventName","callMethod","time","language","kind","_this5","removeAttribute","parentNode","removeChild","currentTime","playbackRate","parent","elements","slice","querySelectorAll","handleError","initializeEmbeds","VimeoPlayerResizeEmbeds_","iframes","parentElement","style","paddingBottom","bottom","resizeEmbeds"],"mappings":"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","file":"2-810b0dbf1b6da4ffaecd.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Player from '@vimeo/player';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = {\n  play: 'onPlay',\n  pause: 'onPause',\n  ended: 'onEnd',\n  timeupdate: 'onTimeUpdate',\n  progress: 'onProgress',\n  seeked: 'onSeeked',\n  texttrackchange: 'onTextTrackChange',\n  cuechange: 'onCueChange',\n  cuepoint: 'onCuePoint',\n  volumechange: 'onVolumeChange',\n  error: 'onError',\n  loaded: 'onLoaded'\n};\n\nvar Vimeo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Vimeo, _React$Component);\n\n  function Vimeo(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Vimeo.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.player.destroy();\n  };\n  /**\n   * @private\n   */\n\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      id: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      autopause: this.props.autopause,\n      autoplay: this.props.autoplay,\n      byline: this.props.showByline,\n      color: this.props.color,\n      loop: this.props.loop,\n      portrait: this.props.showPortrait,\n      title: this.props.showTitle,\n      muted: this.props.muted,\n      background: this.props.background\n    };\n    /* eslint-enable react/destructuring-assignment */\n  };\n  /**\n   * @private\n   */\n\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    var player = this.player;\n    propNames.forEach(function (name) {\n      // eslint-disable-next-line react/destructuring-assignment\n      var value = _this3.props[name];\n\n      switch (name) {\n        case 'autopause':\n          player.setAutopause(value);\n          break;\n\n        case 'color':\n          player.setColor(value);\n          break;\n\n        case 'loop':\n          player.setLoop(value);\n          break;\n\n        case 'volume':\n          player.setVolume(value);\n          break;\n\n        case 'paused':\n          player.getPaused().then(function (paused) {\n            if (value && !paused) {\n              return player.pause();\n            }\n\n            if (!value && paused) {\n              return player.play();\n            }\n\n            return null;\n          });\n          break;\n\n        case 'width':\n        case 'height':\n          player.element[name] = value;\n          break;\n\n        case 'video':\n          if (value) {\n            var start = _this3.props.start;\n            player.loadVideo(value); // Set the start time only when loading a new video.\n\n            if (typeof start === 'number') {\n              player.setCurrentTime(start);\n            }\n          } else {\n            player.unload();\n          }\n\n          break;\n\n        default: // Nothing\n\n      }\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var _this$props = this.props,\n        start = _this$props.start,\n        volume = _this$props.volume;\n    this.player = new Player(this.container, this.getInitialOptions());\n    Object.keys(eventNames).forEach(function (dmName) {\n      var reactName = eventNames[dmName];\n\n      _this4.player.on(dmName, function (event) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var handler = _this4.props[reactName];\n\n        if (handler) {\n          handler(event);\n        }\n      });\n    });\n    var onReady = this.props.onReady;\n\n    if (onReady) {\n      this.player.ready().then(function () {\n        onReady(_this4.player);\n      });\n    }\n\n    if (typeof start === 'number') {\n      this.player.setCurrentTime(start);\n    }\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        id = _this$props2.id,\n        className = _this$props2.className;\n    return React.createElement(\"div\", {\n      id: id,\n      className: className,\n      ref: this.refContainer\n    });\n  };\n\n  return Vimeo;\n}(React.Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  Vimeo.propTypes = {\n    /**\n     * A Vimeo video ID or URL.\n     */\n    video: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n\n    /**\n     * The playback volume as a number between 0 and 1.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * The time in seconds at which to start playing the video.\n     */\n    start: PropTypes.number,\n    // Player parameters\n\n    /**\n     * Pause this video automatically when another one plays.\n     */\n    autopause: PropTypes.bool,\n\n    /**\n     * Automatically start playback of the video. Note that this won’t work on\n     * some devices.\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Show the byline on the video.\n     */\n    showByline: PropTypes.bool,\n\n    /**\n     * Specify the color of the video controls. Colors may be overridden by the\n     * embed settings of the video.\n     */\n    color: PropTypes.string,\n\n    /**\n     * Play the video again when it reaches the end.\n     */\n    loop: PropTypes.bool,\n\n    /**\n     * Show the portrait on the video.\n     */\n    showPortrait: PropTypes.bool,\n\n    /**\n     * Show the title on the video.\n     */\n    showTitle: PropTypes.bool,\n\n    /**\n     * Starts in a muted state to help with autoplay\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * Starts in a background state with no controls to help with autoplay\n     */\n    background: PropTypes.bool,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the Vimeo player API has loaded.\n     * Receives the Vimeo player object in the first parameter.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Triggered when the video plays.\n     */\n    onPlay: PropTypes.func,\n\n    /**\n     * Triggered when the video pauses.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Triggered any time the video playback reaches the end.\n     * Note: when `loop` is turned on, the ended event will not fire.\n     */\n    onEnd: PropTypes.func,\n\n    /**\n     * Triggered as the `currentTime` of the video updates. It generally fires\n     * every 250ms, but it may vary depending on the browser.\n     */\n    onTimeUpdate: PropTypes.func,\n\n    /**\n     * Triggered as the video is loaded. Reports back the amount of the video\n     * that has been buffered.\n     */\n    onProgress: PropTypes.func,\n\n    /**\n     * Triggered when the player seeks to a specific time. An `onTimeUpdate`\n     * event will also be fired at the same time.\n     */\n    onSeeked: PropTypes.func,\n\n    /**\n     * Triggered when the active text track (captions/subtitles) changes. The\n     * values will be `null` if text tracks are turned off.\n     */\n    onTextTrackChange: PropTypes.func,\n\n    /**\n     * Triggered when the active cue for the current text track changes. It also\n     * fires when the active text track changes. There may be multiple cues\n     * active.\n     */\n    onCueChange: PropTypes.func,\n\n    /**\n     * Triggered when the current time hits a registered cue point.\n     */\n    onCuePoint: PropTypes.func,\n\n    /**\n     * Triggered when the volume in the player changes. Some devices do not\n     * support setting the volume of the video independently from the system\n     * volume, so this event will never fire on those devices.\n     */\n    onVolumeChange: PropTypes.func,\n\n    /**\n     * Triggered when a new video is loaded in the player.\n     */\n    onLoaded: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nVimeo.defaultProps = {\n  autopause: true,\n  autoplay: false,\n  showByline: true,\n  loop: false,\n  showPortrait: true,\n  showTitle: true,\n  muted: false,\n  background: false\n};\n\nexport default Vimeo;\n","/*! @vimeo/player v2.9.1 | (c) 2019 Vimeo | MIT License | https://github.com/vimeo/player.js */\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a node environment.\n * @type {Boolean}\n */\n\n/* global global */\nvar isNode = typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\n\nfunction getMethodName(prop, type) {\n  if (prop.indexOf(type.toLowerCase()) === 0) {\n    return prop;\n  }\n\n  return \"\".concat(type.toLowerCase()).concat(prop.substr(0, 1).toUpperCase()).concat(prop.substr(1));\n}\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\n\nfunction isDomElement(element) {\n  return Boolean(element && element.nodeType === 1 && 'nodeName' in element && element.ownerDocument && element.ownerDocument.defaultView);\n}\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\n\nfunction isInteger(value) {\n  // eslint-disable-next-line eqeqeq\n  return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\n\nfunction isVimeoUrl(url) {\n  return /^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/.test(url);\n}\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\n\nfunction getVimeoUrl() {\n  var oEmbedParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = oEmbedParameters.id;\n  var url = oEmbedParameters.url;\n  var idOrUrl = id || url;\n\n  if (!idOrUrl) {\n    throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n  }\n\n  if (isInteger(idOrUrl)) {\n    return \"https://vimeo.com/\".concat(idOrUrl);\n  }\n\n  if (isVimeoUrl(idOrUrl)) {\n    return idOrUrl.replace('http:', 'https:');\n  }\n\n  if (id) {\n    throw new TypeError(\"\\u201C\".concat(id, \"\\u201D is not a valid video id.\"));\n  }\n\n  throw new TypeError(\"\\u201C\".concat(idOrUrl, \"\\u201D is not a vimeo.com url.\"));\n}\n\nvar arrayIndexOfSupport = typeof Array.prototype.indexOf !== 'undefined';\nvar postMessageSupport = typeof window !== 'undefined' && typeof window.postMessage !== 'undefined';\n\nif (!isNode && (!arrayIndexOfSupport || !postMessageSupport)) {\n  throw new Error('Sorry, the Vimeo Player API is not available in this browser.');\n}\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/*!\n * weakmap-polyfill v2.0.0 - ECMAScript6 WeakMap polyfill\n * https://github.com/polygonplanet/weakmap-polyfill\n * Copyright (c) 2015-2016 polygon planet <polygon.planet.aqua@gmail.com>\n * @license MIT\n */\n(function (self) {\n\n  if (self.WeakMap) {\n    return;\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var defineProperty = function (object, name, value) {\n    if (Object.defineProperty) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  self.WeakMap = function () {\n    // ECMA-262 23.3 WeakMap Objects\n    function WeakMap() {\n      if (this === void 0) {\n        throw new TypeError(\"Constructor WeakMap requires 'new'\");\n      }\n\n      defineProperty(this, '_id', genId('_WeakMap')); // ECMA-262 23.3.1.1 WeakMap([iterable])\n\n      if (arguments.length > 0) {\n        // Currently, WeakMap `iterable` argument is not supported\n        throw new TypeError('WeakMap iterable is not supported');\n      }\n    } // ECMA-262 23.3.3.2 WeakMap.prototype.delete(key)\n\n\n    defineProperty(WeakMap.prototype, 'delete', function (key) {\n      checkInstance(this, 'delete');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        delete key[this._id];\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.3 WeakMap.prototype.get(key)\n\n    defineProperty(WeakMap.prototype, 'get', function (key) {\n      checkInstance(this, 'get');\n\n      if (!isObject(key)) {\n        return void 0;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return entry[1];\n      }\n\n      return void 0;\n    }); // ECMA-262 23.3.3.4 WeakMap.prototype.has(key)\n\n    defineProperty(WeakMap.prototype, 'has', function (key) {\n      checkInstance(this, 'has');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.5 WeakMap.prototype.set(key, value)\n\n    defineProperty(WeakMap.prototype, 'set', function (key, value) {\n      checkInstance(this, 'set');\n\n      if (!isObject(key)) {\n        throw new TypeError('Invalid value used as weak map key');\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        entry[1] = value;\n        return this;\n      }\n\n      defineProperty(key, this._id, [key, value]);\n      return this;\n    });\n\n    function checkInstance(x, methodName) {\n      if (!isObject(x) || !hasOwnProperty.call(x, '_id')) {\n        throw new TypeError(methodName + ' method called on incompatible receiver ' + typeof x);\n      }\n    }\n\n    function genId(prefix) {\n      return prefix + '_' + rand() + '.' + rand();\n    }\n\n    function rand() {\n      return Math.random().toString().substring(2);\n    }\n\n    defineProperty(WeakMap, '_polyfill', true);\n    return WeakMap;\n  }();\n\n  function isObject(x) {\n    return Object(x) === x;\n  }\n})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal);\n\nvar npo_src = createCommonjsModule(function (module) {\n/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n(function UMD(name, context, definition) {\n  // special form of UMD for polyfilling across evironments\n  context[name] = context[name] || definition();\n\n  if (module.exports) {\n    module.exports = context[name];\n  }\n})(\"Promise\", typeof commonjsGlobal != \"undefined\" ? commonjsGlobal : commonjsGlobal, function DEF() {\n\n  var builtInProp,\n      cycle,\n      scheduling_queue,\n      ToString = Object.prototype.toString,\n      timer = typeof setImmediate != \"undefined\" ? function timer(fn) {\n    return setImmediate(fn);\n  } : setTimeout; // dammit, IE8.\n\n  try {\n    Object.defineProperty({}, \"x\", {});\n\n    builtInProp = function builtInProp(obj, name, val, config) {\n      return Object.defineProperty(obj, name, {\n        value: val,\n        writable: true,\n        configurable: config !== false\n      });\n    };\n  } catch (err) {\n    builtInProp = function builtInProp(obj, name, val) {\n      obj[name] = val;\n      return obj;\n    };\n  } // Note: using a queue instead of array for efficiency\n\n\n  scheduling_queue = function Queue() {\n    var first, last, item;\n\n    function Item(fn, self) {\n      this.fn = fn;\n      this.self = self;\n      this.next = void 0;\n    }\n\n    return {\n      add: function add(fn, self) {\n        item = new Item(fn, self);\n\n        if (last) {\n          last.next = item;\n        } else {\n          first = item;\n        }\n\n        last = item;\n        item = void 0;\n      },\n      drain: function drain() {\n        var f = first;\n        first = last = cycle = void 0;\n\n        while (f) {\n          f.fn.call(f.self);\n          f = f.next;\n        }\n      }\n    };\n  }();\n\n  function schedule(fn, self) {\n    scheduling_queue.add(fn, self);\n\n    if (!cycle) {\n      cycle = timer(scheduling_queue.drain);\n    }\n  } // promise duck typing\n\n\n  function isThenable(o) {\n    var _then,\n        o_type = typeof o;\n\n    if (o != null && (o_type == \"object\" || o_type == \"function\")) {\n      _then = o.then;\n    }\n\n    return typeof _then == \"function\" ? _then : false;\n  }\n\n  function notify() {\n    for (var i = 0; i < this.chain.length; i++) {\n      notifyIsolated(this, this.state === 1 ? this.chain[i].success : this.chain[i].failure, this.chain[i]);\n    }\n\n    this.chain.length = 0;\n  } // NOTE: This is a separate function to isolate\n  // the `try..catch` so that other code can be\n  // optimized better\n\n\n  function notifyIsolated(self, cb, chain) {\n    var ret, _then;\n\n    try {\n      if (cb === false) {\n        chain.reject(self.msg);\n      } else {\n        if (cb === true) {\n          ret = self.msg;\n        } else {\n          ret = cb.call(void 0, self.msg);\n        }\n\n        if (ret === chain.promise) {\n          chain.reject(TypeError(\"Promise-chain cycle\"));\n        } else if (_then = isThenable(ret)) {\n          _then.call(ret, chain.resolve, chain.reject);\n        } else {\n          chain.resolve(ret);\n        }\n      }\n    } catch (err) {\n      chain.reject(err);\n    }\n  }\n\n  function resolve(msg) {\n    var _then,\n        self = this; // already triggered?\n\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    try {\n      if (_then = isThenable(msg)) {\n        schedule(function () {\n          var def_wrapper = new MakeDefWrapper(self);\n\n          try {\n            _then.call(msg, function $resolve$() {\n              resolve.apply(def_wrapper, arguments);\n            }, function $reject$() {\n              reject.apply(def_wrapper, arguments);\n            });\n          } catch (err) {\n            reject.call(def_wrapper, err);\n          }\n        });\n      } else {\n        self.msg = msg;\n        self.state = 1;\n\n        if (self.chain.length > 0) {\n          schedule(notify, self);\n        }\n      }\n    } catch (err) {\n      reject.call(new MakeDefWrapper(self), err);\n    }\n  }\n\n  function reject(msg) {\n    var self = this; // already triggered?\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    self.msg = msg;\n    self.state = 2;\n\n    if (self.chain.length > 0) {\n      schedule(notify, self);\n    }\n  }\n\n  function iteratePromises(Constructor, arr, resolver, rejecter) {\n    for (var idx = 0; idx < arr.length; idx++) {\n      (function IIFE(idx) {\n        Constructor.resolve(arr[idx]).then(function $resolver$(msg) {\n          resolver(idx, msg);\n        }, rejecter);\n      })(idx);\n    }\n  }\n\n  function MakeDefWrapper(self) {\n    this.def = self;\n    this.triggered = false;\n  }\n\n  function MakeDef(self) {\n    this.promise = self;\n    this.state = 0;\n    this.triggered = false;\n    this.chain = [];\n    this.msg = void 0;\n  }\n\n  function Promise(executor) {\n    if (typeof executor != \"function\") {\n      throw TypeError(\"Not a function\");\n    }\n\n    if (this.__NPO__ !== 0) {\n      throw TypeError(\"Not a promise\");\n    } // instance shadowing the inherited \"brand\"\n    // to signal an already \"initialized\" promise\n\n\n    this.__NPO__ = 1;\n    var def = new MakeDef(this);\n\n    this[\"then\"] = function then(success, failure) {\n      var o = {\n        success: typeof success == \"function\" ? success : true,\n        failure: typeof failure == \"function\" ? failure : false\n      }; // Note: `then(..)` itself can be borrowed to be used against\n      // a different promise constructor for making the chained promise,\n      // by substituting a different `this` binding.\n\n      o.promise = new this.constructor(function extractChain(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n\n        o.resolve = resolve;\n        o.reject = reject;\n      });\n      def.chain.push(o);\n\n      if (def.state !== 0) {\n        schedule(notify, def);\n      }\n\n      return o.promise;\n    };\n\n    this[\"catch\"] = function $catch$(failure) {\n      return this.then(void 0, failure);\n    };\n\n    try {\n      executor.call(void 0, function publicResolve(msg) {\n        resolve.call(def, msg);\n      }, function publicReject(msg) {\n        reject.call(def, msg);\n      });\n    } catch (err) {\n      reject.call(def, err);\n    }\n  }\n\n  var PromisePrototype = builtInProp({}, \"constructor\", Promise,\n  /*configurable=*/\n  false); // Note: Android 4 cannot use `Object.defineProperty(..)` here\n\n  Promise.prototype = PromisePrototype; // built-in \"brand\" to signal an \"uninitialized\" promise\n\n  builtInProp(PromisePrototype, \"__NPO__\", 0,\n  /*configurable=*/\n  false);\n  builtInProp(Promise, \"resolve\", function Promise$resolve(msg) {\n    var Constructor = this; // spec mandated checks\n    // note: best \"isPromise\" check that's practical for now\n\n    if (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n      return msg;\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      resolve(msg);\n    });\n  });\n  builtInProp(Promise, \"reject\", function Promise$reject(msg) {\n    return new this(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      reject(msg);\n    });\n  });\n  builtInProp(Promise, \"all\", function Promise$all(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    if (arr.length === 0) {\n      return Constructor.resolve([]);\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      var len = arr.length,\n          msgs = Array(len),\n          count = 0;\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        msgs[idx] = msg;\n\n        if (++count === len) {\n          resolve(msgs);\n        }\n      }, reject);\n    });\n  });\n  builtInProp(Promise, \"race\", function Promise$race(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        resolve(msg);\n      }, reject);\n    });\n  });\n  return Promise;\n});\n});\n\n/**\n * @module lib/callbacks\n */\nvar callbackMap = new WeakMap();\n/**\n * Store a callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @param {(function(this:Player, *): void|{resolve: function, reject: function})} callback\n *        The callback to call or an object with resolve and reject functions for a promise.\n * @return {void}\n */\n\nfunction storeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!(name in playerCallbacks)) {\n    playerCallbacks[name] = [];\n  }\n\n  playerCallbacks[name].push(callback);\n  callbackMap.set(player.element, playerCallbacks);\n}\n/**\n * Get the callbacks for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @return {function[]}\n */\n\nfunction getCallbacks(player, name) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  return playerCallbacks[name] || [];\n}\n/**\n * Remove a stored callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @param {function} [callback] The specific callback to remove.\n * @return {boolean} Was this the last callback?\n */\n\nfunction removeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!playerCallbacks[name]) {\n    return true;\n  } // If no callback is passed, remove all callbacks for the event\n\n\n  if (!callback) {\n    playerCallbacks[name] = [];\n    callbackMap.set(player.element, playerCallbacks);\n    return true;\n  }\n\n  var index = playerCallbacks[name].indexOf(callback);\n\n  if (index !== -1) {\n    playerCallbacks[name].splice(index, 1);\n  }\n\n  callbackMap.set(player.element, playerCallbacks);\n  return playerCallbacks[name] && playerCallbacks[name].length === 0;\n}\n/**\n * Return the first stored callback for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @return {function} The callback, or false if there were none\n */\n\nfunction shiftCallbacks(player, name) {\n  var playerCallbacks = getCallbacks(player, name);\n\n  if (playerCallbacks.length < 1) {\n    return false;\n  }\n\n  var callback = playerCallbacks.shift();\n  removeCallback(player, name, callback);\n  return callback;\n}\n/**\n * Move callbacks associated with an element to another element.\n *\n * @param {HTMLElement} oldElement The old element.\n * @param {HTMLElement} newElement The new element.\n * @return {void}\n */\n\nfunction swapCallbacks(oldElement, newElement) {\n  var playerCallbacks = callbackMap.get(oldElement);\n  callbackMap.set(newElement, playerCallbacks);\n  callbackMap.delete(oldElement);\n}\n\n/**\n * @module lib/embed\n */\nvar oEmbedParameters = ['autopause', 'autoplay', 'background', 'byline', 'color', 'controls', 'dnt', 'height', 'id', 'loop', 'maxheight', 'maxwidth', 'muted', 'playsinline', 'portrait', 'responsive', 'speed', 'texttrack', 'title', 'transparent', 'url', 'width'];\n/**\n * Get the 'data-vimeo'-prefixed attributes from an element as an object.\n *\n * @param {HTMLElement} element The element.\n * @param {Object} [defaults={}] The default values to use.\n * @return {Object<string, string>}\n */\n\nfunction getOEmbedParameters(element) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return oEmbedParameters.reduce(function (params, param) {\n    var value = element.getAttribute(\"data-vimeo-\".concat(param));\n\n    if (value || value === '') {\n      params[param] = value === '' ? 1 : value;\n    }\n\n    return params;\n  }, defaults);\n}\n/**\n * Create an embed from oEmbed data inside an element.\n *\n * @param {object} data The oEmbed data.\n * @param {HTMLElement} element The element to put the iframe in.\n * @return {HTMLIFrameElement} The iframe embed.\n */\n\nfunction createEmbed(_ref, element) {\n  var html = _ref.html;\n\n  if (!element) {\n    throw new TypeError('An element must be provided');\n  }\n\n  if (element.getAttribute('data-vimeo-initialized') !== null) {\n    return element.querySelector('iframe');\n  }\n\n  var div = document.createElement('div');\n  div.innerHTML = html;\n  element.appendChild(div.firstChild);\n  element.setAttribute('data-vimeo-initialized', 'true');\n  return element.querySelector('iframe');\n}\n/**\n * Make an oEmbed call for the specified URL.\n *\n * @param {string} videoUrl The vimeo.com url for the video.\n * @param {Object} [params] Parameters to pass to oEmbed.\n * @param {HTMLElement} element The element.\n * @return {Promise}\n */\n\nfunction getOEmbedData(videoUrl) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    if (!isVimeoUrl(videoUrl)) {\n      throw new TypeError(\"\\u201C\".concat(videoUrl, \"\\u201D is not a vimeo.com url.\"));\n    }\n\n    var url = \"https://vimeo.com/api/oembed.json?url=\".concat(encodeURIComponent(videoUrl));\n\n    for (var param in params) {\n      if (params.hasOwnProperty(param)) {\n        url += \"&\".concat(param, \"=\").concat(encodeURIComponent(params[param]));\n      }\n    }\n\n    var xhr = 'XDomainRequest' in window ? new XDomainRequest() : new XMLHttpRequest();\n    xhr.open('GET', url, true);\n\n    xhr.onload = function () {\n      if (xhr.status === 404) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D was not found.\")));\n        return;\n      }\n\n      if (xhr.status === 403) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n        return;\n      }\n\n      try {\n        var json = JSON.parse(xhr.responseText); // Check api response for 403 on oembed\n\n        if (json.domain_status_code === 403) {\n          // We still want to create the embed to give users visual feedback\n          createEmbed(json, element);\n          reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n          return;\n        }\n\n        resolve(json);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    xhr.onerror = function () {\n      var status = xhr.status ? \" (\".concat(xhr.status, \")\") : '';\n      reject(new Error(\"There was an error fetching the embed code from Vimeo\".concat(status, \".\")));\n    };\n\n    xhr.send();\n  });\n}\n/**\n * Initialize all embeds within a specific element\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction initializeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var elements = [].slice.call(parent.querySelectorAll('[data-vimeo-id], [data-vimeo-url]'));\n\n  var handleError = function handleError(error) {\n    if ('console' in window && console.error) {\n      console.error(\"There was an error creating an embed: \".concat(error));\n    }\n  };\n\n  elements.forEach(function (element) {\n    try {\n      // Skip any that have data-vimeo-defer\n      if (element.getAttribute('data-vimeo-defer') !== null) {\n        return;\n      }\n\n      var params = getOEmbedParameters(element);\n      var url = getVimeoUrl(params);\n      getOEmbedData(url, params, element).then(function (data) {\n        return createEmbed(data, element);\n      }).catch(handleError);\n    } catch (error) {\n      handleError(error);\n    }\n  });\n}\n/**\n * Resize embeds when messaged by the player.\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction resizeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n  // Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoPlayerResizeEmbeds_) {\n    return;\n  }\n\n  window.VimeoPlayerResizeEmbeds_ = true;\n\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    } // 'spacechange' is fired only on embeds with cards\n\n\n    if (!event.data || event.data.event !== 'spacechange') {\n      return;\n    }\n\n    var iframes = parent.querySelectorAll('iframe');\n\n    for (var i = 0; i < iframes.length; i++) {\n      if (iframes[i].contentWindow !== event.source) {\n        continue;\n      } // Change padding-bottom of the enclosing div to accommodate\n      // card carousel without distorting aspect ratio\n\n\n      var space = iframes[i].parentElement;\n      space.style.paddingBottom = \"\".concat(event.data.data[0].bottom, \"px\");\n      break;\n    }\n  };\n\n  if (window.addEventListener) {\n    window.addEventListener('message', onMessage, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('onmessage', onMessage);\n  }\n}\n\n/**\n * @module lib/postmessage\n */\n/**\n * Parse a message received from postMessage.\n *\n * @param {*} data The data received from postMessage.\n * @return {object}\n */\n\nfunction parseMessageData(data) {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      // If the message cannot be parsed, throw the error as a warning\n      console.warn(error);\n      return {};\n    }\n  }\n\n  return data;\n}\n/**\n * Post a message to the specified target.\n *\n * @param {Player} player The player object to use.\n * @param {string} method The API method to call.\n * @param {object} params The parameters to send to the player.\n * @return {void}\n */\n\nfunction postMessage(player, method, params) {\n  if (!player.element.contentWindow || !player.element.contentWindow.postMessage) {\n    return;\n  }\n\n  var message = {\n    method: method\n  };\n\n  if (params !== undefined) {\n    message.value = params;\n  } // IE 8 and 9 do not support passing messages, so stringify them\n\n\n  var ieVersion = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\\d+).*$/, '$1'));\n\n  if (ieVersion >= 8 && ieVersion < 10) {\n    message = JSON.stringify(message);\n  }\n\n  player.element.contentWindow.postMessage(message, player.origin);\n}\n/**\n * Parse the data received from a message event.\n *\n * @param {Player} player The player that received the message.\n * @param {(Object|string)} data The message data. Strings will be parsed into JSON.\n * @return {void}\n */\n\nfunction processData(player, data) {\n  data = parseMessageData(data);\n  var callbacks = [];\n  var param;\n\n  if (data.event) {\n    if (data.event === 'error') {\n      var promises = getCallbacks(player, data.data.method);\n      promises.forEach(function (promise) {\n        var error = new Error(data.data.message);\n        error.name = data.data.name;\n        promise.reject(error);\n        removeCallback(player, data.data.method, promise);\n      });\n    }\n\n    callbacks = getCallbacks(player, \"event:\".concat(data.event));\n    param = data.data;\n  } else if (data.method) {\n    var callback = shiftCallbacks(player, data.method);\n\n    if (callback) {\n      callbacks.push(callback);\n      param = data.value;\n    }\n  }\n\n  callbacks.forEach(function (callback) {\n    try {\n      if (typeof callback === 'function') {\n        callback.call(player, param);\n        return;\n      }\n\n      callback.resolve(param);\n    } catch (e) {// empty\n    }\n  });\n}\n\nvar playerMap = new WeakMap();\nvar readyMap = new WeakMap();\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a Player.\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to the Vimeo\n   *        player iframe, and id, or a jQuery object.\n   * @param {object} [options] oEmbed parameters to use when creating an embed in the element.\n   * @return {Player}\n   */\n  function Player(element) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Player);\n\n    /* global jQuery */\n    if (window.jQuery && element instanceof jQuery) {\n      if (element.length > 1 && window.console && console.warn) {\n        console.warn('A jQuery object with multiple elements was passed, using the first element.');\n      }\n\n      element = element[0];\n    } // Find an element by ID\n\n\n    if (typeof document !== 'undefined' && typeof element === 'string') {\n      element = document.getElementById(element);\n    } // Not an element!\n\n\n    if (!isDomElement(element)) {\n      throw new TypeError('You must pass either a valid element or a valid id.');\n    }\n\n    var win = element.ownerDocument.defaultView; // Already initialized an embed in this div, so grab the iframe\n\n    if (element.nodeName !== 'IFRAME') {\n      var iframe = element.querySelector('iframe');\n\n      if (iframe) {\n        element = iframe;\n      }\n    } // iframe url is not a Vimeo url\n\n\n    if (element.nodeName === 'IFRAME' && !isVimeoUrl(element.getAttribute('src') || '')) {\n      throw new Error('The player element passed isn’t a Vimeo embed.');\n    } // If there is already a player object in the map, return that\n\n\n    if (playerMap.has(element)) {\n      return playerMap.get(element);\n    }\n\n    this.element = element;\n    this.origin = '*';\n    var readyPromise = new npo_src(function (resolve, reject) {\n      var onMessage = function onMessage(event) {\n        if (!isVimeoUrl(event.origin) || _this.element.contentWindow !== event.source) {\n          return;\n        }\n\n        if (_this.origin === '*') {\n          _this.origin = event.origin;\n        }\n\n        var data = parseMessageData(event.data);\n        var isError = data && data.event === 'error';\n        var isReadyError = isError && data.data && data.data.method === 'ready';\n\n        if (isReadyError) {\n          var error = new Error(data.data.message);\n          error.name = data.data.name;\n          reject(error);\n          return;\n        }\n\n        var isReadyEvent = data && data.event === 'ready';\n        var isPingResponse = data && data.method === 'ping';\n\n        if (isReadyEvent || isPingResponse) {\n          _this.element.setAttribute('data-ready', 'true');\n\n          resolve();\n          return;\n        }\n\n        processData(_this, data);\n      };\n\n      if (win.addEventListener) {\n        win.addEventListener('message', onMessage, false);\n      } else if (win.attachEvent) {\n        win.attachEvent('onmessage', onMessage);\n      }\n\n      if (_this.element.nodeName !== 'IFRAME') {\n        var params = getOEmbedParameters(element, options);\n        var url = getVimeoUrl(params);\n        getOEmbedData(url, params, element).then(function (data) {\n          var iframe = createEmbed(data, element); // Overwrite element with the new iframe,\n          // but store reference to the original element\n\n          _this.element = iframe;\n          _this._originalElement = element;\n          swapCallbacks(element, iframe);\n          playerMap.set(_this.element, _this);\n          return data;\n        }).catch(reject);\n      }\n    }); // Store a copy of this Player in the map\n\n    readyMap.set(this, readyPromise);\n    playerMap.set(this.element, this); // Send a ping to the iframe so the ready promise will be resolved if\n    // the player is already ready.\n\n    if (this.element.nodeName === 'IFRAME') {\n      postMessage(this, 'ping');\n    }\n\n    return this;\n  }\n  /**\n   * Get a promise for a method.\n   *\n   * @param {string} name The API method to call.\n   * @param {Object} [args={}] Arguments to send via postMessage.\n   * @return {Promise}\n   */\n\n\n  _createClass(Player, [{\n    key: \"callMethod\",\n    value: function callMethod(name) {\n      var _this2 = this;\n\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new npo_src(function (resolve, reject) {\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n        return _this2.ready().then(function () {\n          storeCallback(_this2, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this2, name, args);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for the value of a player property.\n     *\n     * @param {string} name The property name\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _this3 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'get'); // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n        return _this3.ready().then(function () {\n          storeCallback(_this3, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this3, name);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for setting the value of a player property.\n     *\n     * @param {string} name The API method to call.\n     * @param {mixed} value The value to set.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var _this4 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'set');\n\n        if (value === undefined || value === null) {\n          throw new TypeError('There must be a value to set.');\n        } // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n\n        return _this4.ready().then(function () {\n          storeCallback(_this4, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this4, name, value);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Add an event listener for the specified event. Will call the\n     * callback with a single parameter, `data`, that contains the data for\n     * that event.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function(*)} callback The function to call when the event fires.\n     * @return {void}\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (!callback) {\n        throw new TypeError('You must pass a callback function.');\n      }\n\n      if (typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var callbacks = getCallbacks(this, \"event:\".concat(eventName));\n\n      if (callbacks.length === 0) {\n        this.callMethod('addEventListener', eventName).catch(function () {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n\n      storeCallback(this, \"event:\".concat(eventName), callback);\n    }\n    /**\n     * Remove an event listener for the specified event. Will remove all\n     * listeners for that event if a `callback` isn’t passed, or only that\n     * specific callback if it is passed.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function} [callback] The specific callback to remove.\n     * @return {void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (callback && typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var lastCallback = removeCallback(this, \"event:\".concat(eventName), callback); // If there are no callbacks left, remove the listener\n\n      if (lastCallback) {\n        this.callMethod('removeEventListener', eventName).catch(function (e) {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n    }\n    /**\n     * A promise to load a new video.\n     *\n     * @promise LoadVideoPromise\n     * @fulfill {number} The video with this id successfully loaded.\n     * @reject {TypeError} The id was not a number.\n     */\n\n    /**\n     * Load a new video into this embed. The promise will be resolved if\n     * the video is successfully loaded, or it will be rejected if it could\n     * not be loaded.\n     *\n     * @param {number|object} options The id of the video or an object with embed options.\n     * @return {LoadVideoPromise}\n     */\n\n  }, {\n    key: \"loadVideo\",\n    value: function loadVideo(options) {\n      return this.callMethod('loadVideo', options);\n    }\n    /**\n     * A promise to perform an action when the Player is ready.\n     *\n     * @todo document errors\n     * @promise LoadVideoPromise\n     * @fulfill {void}\n     */\n\n    /**\n     * Trigger a function when the player iframe has initialized. You do not\n     * need to wait for `ready` to trigger to begin adding event listeners\n     * or calling other methods.\n     *\n     * @return {ReadyPromise}\n     */\n\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      var readyPromise = readyMap.get(this) || new npo_src(function (resolve, reject) {\n        reject(new Error('Unknown player. Probably unloaded.'));\n      });\n      return npo_src.resolve(readyPromise);\n    }\n    /**\n     * A promise to add a cue point to the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point to use for removeCuePoint.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Add a cue point to the player.\n     *\n     * @param {number} time The time for the cue point.\n     * @param {object} [data] Arbitrary data to be returned with the cue point.\n     * @return {AddCuePointPromise}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(time) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.callMethod('addCuePoint', {\n        time: time,\n        data: data\n      });\n    }\n    /**\n     * A promise to remove a cue point from the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point that was removed.\n     * @reject {InvalidCuePoint} The cue point with the specified id was not\n     *         found.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Remove a cue point from the video.\n     *\n     * @param {string} id The id of the cue point to remove.\n     * @return {RemoveCuePointPromise}\n     */\n\n  }, {\n    key: \"removeCuePoint\",\n    value: function removeCuePoint(id) {\n      return this.callMethod('removeCuePoint', id);\n    }\n    /**\n     * A representation of a text track on a video.\n     *\n     * @typedef {Object} VimeoTextTrack\n     * @property {string} language The ISO language code.\n     * @property {string} kind The kind of track it is (captions or subtitles).\n     * @property {string} label The human‐readable label for the track.\n     */\n\n    /**\n     * A promise to enable a text track.\n     *\n     * @promise EnableTextTrackPromise\n     * @fulfill {VimeoTextTrack} The text track that was enabled.\n     * @reject {InvalidTrackLanguageError} No track was available with the\n     *         specified language.\n     * @reject {InvalidTrackError} No track was available with the specified\n     *         language and kind.\n     */\n\n    /**\n     * Enable the text track with the specified language, and optionally the\n     * specified kind (captions or subtitles).\n     *\n     * When set via the API, the track language will not change the viewer’s\n     * stored preference.\n     *\n     * @param {string} language The two‐letter language code.\n     * @param {string} [kind] The kind of track to enable (captions or subtitles).\n     * @return {EnableTextTrackPromise}\n     */\n\n  }, {\n    key: \"enableTextTrack\",\n    value: function enableTextTrack(language, kind) {\n      if (!language) {\n        throw new TypeError('You must pass a language.');\n      }\n\n      return this.callMethod('enableTextTrack', {\n        language: language,\n        kind: kind\n      });\n    }\n    /**\n     * A promise to disable the active text track.\n     *\n     * @promise DisableTextTrackPromise\n     * @fulfill {void} The track was disabled.\n     */\n\n    /**\n     * Disable the currently-active text track.\n     *\n     * @return {DisableTextTrackPromise}\n     */\n\n  }, {\n    key: \"disableTextTrack\",\n    value: function disableTextTrack() {\n      return this.callMethod('disableTextTrack');\n    }\n    /**\n     * A promise to pause the video.\n     *\n     * @promise PausePromise\n     * @fulfill {void} The video was paused.\n     */\n\n    /**\n     * Pause the video if it’s playing.\n     *\n     * @return {PausePromise}\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this.callMethod('pause');\n    }\n    /**\n     * A promise to play the video.\n     *\n     * @promise PlayPromise\n     * @fulfill {void} The video was played.\n     */\n\n    /**\n     * Play the video if it’s paused. **Note:** on iOS and some other\n     * mobile devices, you cannot programmatically trigger play. Once the\n     * viewer has tapped on the play button in the player, however, you\n     * will be able to use this function.\n     *\n     * @return {PlayPromise}\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      return this.callMethod('play');\n    }\n    /**\n     * A promise to unload the video.\n     *\n     * @promise UnloadPromise\n     * @fulfill {void} The video was unloaded.\n     */\n\n    /**\n     * Return the player to its initial state.\n     *\n     * @return {UnloadPromise}\n     */\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      return this.callMethod('unload');\n    }\n    /**\n     * Cleanup the player and remove it from the DOM\n     *\n     * It won't be usable and a new one should be constructed\n     *  in order to do any operations.\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this5 = this;\n\n      return new npo_src(function (resolve) {\n        readyMap.delete(_this5);\n        playerMap.delete(_this5.element);\n\n        if (_this5._originalElement) {\n          playerMap.delete(_this5._originalElement);\n\n          _this5._originalElement.removeAttribute('data-vimeo-initialized');\n        }\n\n        if (_this5.element && _this5.element.nodeName === 'IFRAME' && _this5.element.parentNode) {\n          _this5.element.parentNode.removeChild(_this5.element);\n        }\n\n        resolve();\n      });\n    }\n    /**\n     * A promise to get the autopause behavior of the video.\n     *\n     * @promise GetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get the autopause behavior for this player.\n     *\n     * @return {GetAutopausePromise}\n     */\n\n  }, {\n    key: \"getAutopause\",\n    value: function getAutopause() {\n      return this.get('autopause');\n    }\n    /**\n     * A promise to set the autopause behavior of the video.\n     *\n     * @promise SetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Enable or disable the autopause behavior of this player.\n     *\n     * By default, when another video is played in the same browser, this\n     * player will automatically pause. Unless you have a specific reason\n     * for doing so, we recommend that you leave autopause set to the\n     * default (`true`).\n     *\n     * @param {boolean} autopause\n     * @return {SetAutopausePromise}\n     */\n\n  }, {\n    key: \"setAutopause\",\n    value: function setAutopause(autopause) {\n      return this.set('autopause', autopause);\n    }\n    /**\n     * A promise to get the buffered property of the video.\n     *\n     * @promise GetBufferedPromise\n     * @fulfill {Array} Buffered Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the buffered property of the video.\n     *\n     * @return {GetBufferedPromise}\n     */\n\n  }, {\n    key: \"getBuffered\",\n    value: function getBuffered() {\n      return this.get('buffered');\n    }\n    /**\n     * A promise to get the color of the player.\n     *\n     * @promise GetColorPromise\n     * @fulfill {string} The hex color of the player.\n     */\n\n    /**\n     * Get the color for this player.\n     *\n     * @return {GetColorPromise}\n     */\n\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      return this.get('color');\n    }\n    /**\n     * A promise to set the color of the player.\n     *\n     * @promise SetColorPromise\n     * @fulfill {string} The color was successfully set.\n     * @reject {TypeError} The string was not a valid hex or rgb color.\n     * @reject {ContrastError} The color was set, but the contrast is\n     *         outside of the acceptable range.\n     * @reject {EmbedSettingsError} The owner of the player has chosen to\n     *         use a specific color.\n     */\n\n    /**\n     * Set the color of this player to a hex or rgb string. Setting the\n     * color may fail if the owner of the video has set their embed\n     * preferences to force a specific color.\n     *\n     * @param {string} color The hex or rgb color string to set.\n     * @return {SetColorPromise}\n     */\n\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      return this.set('color', color);\n    }\n    /**\n     * A representation of a cue point.\n     *\n     * @typedef {Object} VimeoCuePoint\n     * @property {number} time The time of the cue point.\n     * @property {object} data The data passed when adding the cue point.\n     * @property {string} id The unique id for use with removeCuePoint.\n     */\n\n    /**\n     * A promise to get the cue points of a video.\n     *\n     * @promise GetCuePointsPromise\n     * @fulfill {VimeoCuePoint[]} The cue points added to the video.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get an array of the cue points added to the video.\n     *\n     * @return {GetCuePointsPromise}\n     */\n\n  }, {\n    key: \"getCuePoints\",\n    value: function getCuePoints() {\n      return this.get('cuePoints');\n    }\n    /**\n     * A promise to get the current time of the video.\n     *\n     * @promise GetCurrentTimePromise\n     * @fulfill {number} The current time in seconds.\n     */\n\n    /**\n     * Get the current playback position in seconds.\n     *\n     * @return {GetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.get('currentTime');\n    }\n    /**\n     * A promise to set the current time of the video.\n     *\n     * @promise SetCurrentTimePromise\n     * @fulfill {number} The actual current time that was set.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     */\n\n    /**\n     * Set the current playback position in seconds. If the player was\n     * paused, it will remain paused. Likewise, if the player was playing,\n     * it will resume playing once the video has buffered.\n     *\n     * You can provide an accurate time and the player will attempt to seek\n     * to as close to that time as possible. The exact time will be the\n     * fulfilled value of the promise.\n     *\n     * @param {number} currentTime\n     * @return {SetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(currentTime) {\n      return this.set('currentTime', currentTime);\n    }\n    /**\n     * A promise to get the duration of the video.\n     *\n     * @promise GetDurationPromise\n     * @fulfill {number} The duration in seconds.\n     */\n\n    /**\n     * Get the duration of the video in seconds. It will be rounded to the\n     * nearest second before playback begins, and to the nearest thousandth\n     * of a second after playback begins.\n     *\n     * @return {GetDurationPromise}\n     */\n\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.get('duration');\n    }\n    /**\n     * A promise to get the ended state of the video.\n     *\n     * @promise GetEndedPromise\n     * @fulfill {boolean} Whether or not the video has ended.\n     */\n\n    /**\n     * Get the ended state of the video. The video has ended if\n     * `currentTime === duration`.\n     *\n     * @return {GetEndedPromise}\n     */\n\n  }, {\n    key: \"getEnded\",\n    value: function getEnded() {\n      return this.get('ended');\n    }\n    /**\n     * A promise to get the loop state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the player is set to loop.\n     */\n\n    /**\n     * Get the loop state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getLoop\",\n    value: function getLoop() {\n      return this.get('loop');\n    }\n    /**\n     * A promise to set the loop state of the player.\n     *\n     * @promise SetLoopPromise\n     * @fulfill {boolean} The loop state that was set.\n     */\n\n    /**\n     * Set the loop state of the player. When set to `true`, the player\n     * will start over immediately once playback ends.\n     *\n     * @param {boolean} loop\n     * @return {SetLoopPromise}\n     */\n\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(loop) {\n      return this.set('loop', loop);\n    }\n    /**\n     * A promise to get the paused state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the video is paused.\n     */\n\n    /**\n     * Get the paused state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getPaused\",\n    value: function getPaused() {\n      return this.get('paused');\n    }\n    /**\n     * A promise to get the playback rate of the player.\n     *\n     * @promise GetPlaybackRatePromise\n     * @fulfill {number} The playback rate of the player on a scale from 0.5 to 2.\n     */\n\n    /**\n     * Get the playback rate of the player on a scale from `0.5` to `2`.\n     *\n     * @return {GetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.get('playbackRate');\n    }\n    /**\n     * A promise to set the playbackrate of the player.\n     *\n     * @promise SetPlaybackRatePromise\n     * @fulfill {number} The playback rate was set.\n     * @reject {RangeError} The playback rate was less than 0.5 or greater than 2.\n     */\n\n    /**\n     * Set the playback rate of the player on a scale from `0.5` to `2`. When set\n     * via the API, the playback rate will not be synchronized to other\n     * players or stored as the viewer's preference.\n     *\n     * @param {number} playbackRate\n     * @return {SetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(playbackRate) {\n      return this.set('playbackRate', playbackRate);\n    }\n    /**\n     * A promise to get the played property of the video.\n     *\n     * @promise GetPlayedPromise\n     * @fulfill {Array} Played Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the played property of the video.\n     *\n     * @return {GetPlayedPromise}\n     */\n\n  }, {\n    key: \"getPlayed\",\n    value: function getPlayed() {\n      return this.get('played');\n    }\n    /**\n     * A promise to get the seekable property of the video.\n     *\n     * @promise GetSeekablePromise\n     * @fulfill {Array} Seekable Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the seekable property of the video.\n     *\n     * @return {GetSeekablePromise}\n     */\n\n  }, {\n    key: \"getSeekable\",\n    value: function getSeekable() {\n      return this.get('seekable');\n    }\n    /**\n     * A promise to get the seeking property of the player.\n     *\n     * @promise GetSeekingPromise\n     * @fulfill {boolean} Whether or not the player is currently seeking.\n     */\n\n    /**\n     * Get if the player is currently seeking.\n     *\n     * @return {GetSeekingPromise}\n     */\n\n  }, {\n    key: \"getSeeking\",\n    value: function getSeeking() {\n      return this.get('seeking');\n    }\n    /**\n     * A promise to get the text tracks of a video.\n     *\n     * @promise GetTextTracksPromise\n     * @fulfill {VimeoTextTrack[]} The text tracks associated with the video.\n     */\n\n    /**\n     * Get an array of the text tracks that exist for the video.\n     *\n     * @return {GetTextTracksPromise}\n     */\n\n  }, {\n    key: \"getTextTracks\",\n    value: function getTextTracks() {\n      return this.get('textTracks');\n    }\n    /**\n     * A promise to get the embed code for the video.\n     *\n     * @promise GetVideoEmbedCodePromise\n     * @fulfill {string} The `<iframe>` embed code for the video.\n     */\n\n    /**\n     * Get the `<iframe>` embed code for the video.\n     *\n     * @return {GetVideoEmbedCodePromise}\n     */\n\n  }, {\n    key: \"getVideoEmbedCode\",\n    value: function getVideoEmbedCode() {\n      return this.get('videoEmbedCode');\n    }\n    /**\n     * A promise to get the id of the video.\n     *\n     * @promise GetVideoIdPromise\n     * @fulfill {number} The id of the video.\n     */\n\n    /**\n     * Get the id of the video.\n     *\n     * @return {GetVideoIdPromise}\n     */\n\n  }, {\n    key: \"getVideoId\",\n    value: function getVideoId() {\n      return this.get('videoId');\n    }\n    /**\n     * A promise to get the title of the video.\n     *\n     * @promise GetVideoTitlePromise\n     * @fulfill {number} The title of the video.\n     */\n\n    /**\n     * Get the title of the video.\n     *\n     * @return {GetVideoTitlePromise}\n     */\n\n  }, {\n    key: \"getVideoTitle\",\n    value: function getVideoTitle() {\n      return this.get('videoTitle');\n    }\n    /**\n     * A promise to get the native width of the video.\n     *\n     * @promise GetVideoWidthPromise\n     * @fulfill {number} The native width of the video.\n     */\n\n    /**\n     * Get the native width of the currently‐playing video. The width of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoWidthPromise}\n     */\n\n  }, {\n    key: \"getVideoWidth\",\n    value: function getVideoWidth() {\n      return this.get('videoWidth');\n    }\n    /**\n     * A promise to get the native height of the video.\n     *\n     * @promise GetVideoHeightPromise\n     * @fulfill {number} The native height of the video.\n     */\n\n    /**\n     * Get the native height of the currently‐playing video. The height of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoHeightPromise}\n     */\n\n  }, {\n    key: \"getVideoHeight\",\n    value: function getVideoHeight() {\n      return this.get('videoHeight');\n    }\n    /**\n     * A promise to get the vimeo.com url for the video.\n     *\n     * @promise GetVideoUrlPromise\n     * @fulfill {number} The vimeo.com url for the video.\n     * @reject {PrivacyError} The url isn’t available because of the video’s privacy setting.\n     */\n\n    /**\n     * Get the vimeo.com url for the video.\n     *\n     * @return {GetVideoUrlPromise}\n     */\n\n  }, {\n    key: \"getVideoUrl\",\n    value: function getVideoUrl() {\n      return this.get('videoUrl');\n    }\n    /**\n     * A promise to get the volume level of the player.\n     *\n     * @promise GetVolumePromise\n     * @fulfill {number} The volume level of the player on a scale from 0 to 1.\n     */\n\n    /**\n     * Get the current volume level of the player on a scale from `0` to `1`.\n     *\n     * Most mobile devices do not support an independent volume from the\n     * system volume. In those cases, this method will always return `1`.\n     *\n     * @return {GetVolumePromise}\n     */\n\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.get('volume');\n    }\n    /**\n     * A promise to set the volume level of the player.\n     *\n     * @promise SetVolumePromise\n     * @fulfill {number} The volume was set.\n     * @reject {RangeError} The volume was less than 0 or greater than 1.\n     */\n\n    /**\n     * Set the volume of the player on a scale from `0` to `1`. When set\n     * via the API, the volume level will not be synchronized to other\n     * players or stored as the viewer’s preference.\n     *\n     * Most mobile devices do not support setting the volume. An error will\n     * *not* be triggered in that situation.\n     *\n     * @param {number} volume\n     * @return {SetVolumePromise}\n     */\n\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      return this.set('volume', volume);\n    }\n  }]);\n\n  return Player;\n}(); // Setup embed only if this is not a node environment\n\n\nif (!isNode) {\n  initializeEmbeds();\n  resizeEmbeds();\n}\n\nexport default Player;\n"],"sourceRoot":""}